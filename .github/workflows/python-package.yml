# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GG_PYTHON_VERSION: "3.9"
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-3.9-pip-${{ hashFiles('**/requirements.txt', 'Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-3.9-pip-

    - uses: actions/cache@v2
      if: startsWith(runner.os, 'macOS')
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-3.9-pip-${{ hashFiles('**/requirements.txt', 'Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-3.9-pip-
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies & build
      run: |
        echo "python version"
        echo $GG_PYTHON_VERSION
        make
    - name: PEX Distributable
      run: |
        make pex
    - name: Test with pytest
      run: |
        make test

  # python_compat:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   env:
  #     GG_PYTHON_VERSION: ${{ matrix.python-version }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: [3.8]

  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: actions/cache@v2
  #     if: startsWith(runner.os, 'Linux')
  #     with:
  #       path: ~/.cache/pip
  #       key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements.txt', 'Pipfile.lock') }}
  #       restore-keys: |
  #         ${{ runner.os }}-${{ matrix.python-version }}-pip-

  #   - uses: actions/cache@v2
  #     if: startsWith(runner.os, 'macOS')
  #     with:
  #       path: ~/Library/Caches/pip
  #       key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements.txt', 'Pipfile.lock') }}
  #       restore-keys: |
  #         ${{ runner.os }}-${{ matrix.python-version }}-pip-
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install dependencies & build
  #     run: |
  #       echo "python version"
  #       echo $GG_PYTHON_VERSION
  #       make
  #   - name: Test with pytest
  #     run: |
  #       pytest

  os_compat:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
        - os: ubuntu-latest
          path: ~/.cache/pip
        - os: macos-latest
          path: ~/Library/Caches/pip
        - os: windows-latest
          path: ~\AppData\Local\pip\Cache
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ${{ matrix.path }}
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements.txt', 'Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pip-
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies & build
      run: |
        make
    - name: Test with pytest
      if: startsWith(runner.os, 'macOS')
      run: |
        pytest
